{:paths ["src" "resources"]
 :deps {http-kit/http-kit {:mvn/version "2.5.3"}
        hiccup/hiccup {:mvn/version"1.0.5"}
        org.clojure/tools.logging {:mvn/version "1.1.0"}
        bidi/bidi {:mvn/version "2.1.6"}
        ring/ring {:mvn/version "1.7.0"}
        ch.qos.logback/logback-classic {:mvn/version "1.2.3"}
        metosin/muuntaja {:mvn/version "0.6.8"}
        ;;Fixes reflection issues
        metosin/jsonista {:mvn/version "0.3.1"}
        camel-snake-kebab/camel-snake-kebab {:mvn/version "0.4.2"}
        ;;Fixes reflection issues
        ring/ring-codec {:mvn/version "1.1.3"}
        ;;Note that we have to change our build scripts but it all works fine.
        org.postgresql/postgresql {:mvn/version "42.2.12"}
        seancorfield/next.jdbc {:mvn/version "1.0.424"}}
 :aliases
 {:cljs
  {:extra-deps {thheller/shadow-cljs {:mvn/version "2.12.4"}
                cider/cider-nrepl {:mvn/version "0.25.5"}
                cljs-ajax/cljs-ajax {:mvn/version "0.8.0"}
                re-frame/re-frame {:mvn/version "1.2.0"}}
   :main-opts ["-m" "shadow.cljs.devtools.cli"]}
  :css
  {:replace-deps {lambdaisland/garden-watcher {:mvn/version "1.0.36"}}
   :replace-paths ["css"]
   :ns-default watcher
   :exec-fn watcher/-main}
  :standalone-server
  {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.0.193"}}
   :ns-default hf.depstar
   :exec-fn hf.depstar/uberjar
   :exec-args {:group-id "com.cnuernber"
               :artifact-id "standalone"
               :version "1.00-beta-1"
               :sync-pom true
               :aot true
               :main-class gateway-example.main
               :jar "target/standalone.jar"
               ;;Disable tensor code generation and ensure direct linking.
               :jvm-opts ["-Dclojure.compiler.direct-linking=true"
                          "-Dclojure.spec.skip-macros=true"]}}
  :proxy-lambda
  {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.0.193"}}
   :ns-default hf.depstar
   :exec-fn hf.depstar/uberjar
   :exec-args {:group-id "com.cnuernber"
               :artifact-id "proxy-lambda"
               :version "1.00-beta-1"
               :sync-pom true
               :aot true
               :main-class gateway-example.proxy-lambda
               :jar "target/proxy-lambda.jar"
               ;;Disable tensor code generation and ensure direct linking.
               :jvm-opts ["-Dclojure.compiler.direct-linking=true"
                          "-Dclojure.spec.skip-macros=true"]}}

  }}
